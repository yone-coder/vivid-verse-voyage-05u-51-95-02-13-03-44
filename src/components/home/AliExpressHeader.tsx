import { useState, useRef, useEffect } from 'react'; import { Search, X, Mic, Bell, QrCode } from 'lucide-react'; import Logo from './Logo'; // Import the new Logo component  
   
export default function CompactAliExpressHeader() { const [activeTab, setActiveTab] = useState('All'); const [isSearchFocused, setIsSearchFocused] = useState(false); const [searchQuery, setSearchQuery] = useState(''); const [voiceSearchActive, setVoiceSearchActive] = useState(false); const searchRef = useRef(null);  
   
const categories = [ 'All', 'Women', 'Men', 'Electronics', 'Home', 'Beauty', 'Kids', 'Sports', ];  
   
useEffect(() => { const handleClickOutside = (event) => { if (searchRef.current && !searchRef.current.contains(event.target)) { // No changes here } }; document.addEventListener('mousedown', handleClickOutside); return () => document.removeEventListener('mousedown', handleClickOutside); }, []);  
   
const handleSearchFocus = () => { setIsSearchFocused(true); };  
   
const handleClearSearch = () => { setSearchQuery(''); };  
   
const handleVoiceSearch = () => { setVoiceSearchActive(!voiceSearchActive); };  
   
return (   
 {/* Main Header */}*   
 *{/* Logo on the left */}*   
 **   
  *{/* Replace SVG with Logo component */}   
   
 `    {/* Search bar in the middle */}     <div className="flex-1 max-w-xs mx-2 relative" ref={searchRef}>       <div         className={`flex items-center bg-gray-100 rounded-full ${           isSearchFocused ? 'border border-orange-500' : 'border border-gray-200'         }`}       >         <Search className="ml-2 h-4 w-4 text-orange-500" />         <input           className="py-1 px-2 text-xs outline-none bg-gray-100 placeholder-gray-400 w-full"           placeholder="Search on AliExpress"           value={searchQuery}           onChange={(e) => setSearchQuery(e.target.value)}           onFocus={handleSearchFocus}         />         <div           className={`cursor-pointer mx-1 rounded-full ${             voiceSearchActive ? 'bg-orange-100' : ''           }`}           onClick={handleVoiceSearch}         >           <Mic className="h-4 w-4 text-orange-500" />         </div>         {searchQuery && (           <div             className="cursor-pointer mr-2 rounded-full hover:bg-gray-200"             onClick={handleClearSearch}           >             <X className="h-3 w-3 text-gray-500" />           </div>         )}       </div>     </div>      {/* Icons on the right */}     <div className="flex items-center space-x-3">       <div className="cursor-pointer relative">         <Bell className="h-5 w-5 text-gray-600" />         <span className="absolute -top-1 -right-1 bg-orange-500 text-white text-xs rounded-full h-3.5 w-3.5 flex items-center justify-center">           2         </span>       </div>       <div className="cursor-pointer">         <QrCode className="h-5 w-5 text-gray-600" />       </div>     </div>   </div>    {/* Tab Navigation */}   <div className="flex overflow-x-auto no-scrollbar bg-white mt-[-6px]">     {categories.map((category) => (       <button         key={category}         className={`whitespace-nowrap px-3 py-1 text-xs font-medium transition-all border-b-2 ${           activeTab === category             ? 'border-orange-500 text-orange-500'             : 'border-transparent text-gray-600 hover:text-gray-900'         }`}         onClick={() => setActiveTab(category)}       >         {category}       </button>     ))}   </div>    {/* Voice search overlay */}   {voiceSearchActive && (     <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-20">       <div className="bg-white p-4 rounded-xl w-64 flex flex-col items-center">         <div className="w-12 h-12 rounded-full bg-orange-100 flex items-center justify-center mb-2 animate-pulse">           <Mic className="h-6 w-6 text-orange-500" />         </div>         <p className="text-sm mb-1">Listening...</p>         <p className="text-xs text-gray-500 mb-2">Speak now to search</p>         <button           className="text-xs px-4 py-1 bg-orange-500 text-white rounded-full"           onClick={handleVoiceSearch}         >           Cancel         </button>       </div>     </div>   )} </div> `   
); }  