
import { useState } from 'react'; import { ChevronLeft, ChevronRight, Star, Flame, ShoppingCart, CheckCircle, Smartphone, Shirt, Home, Droplet, Activity, Heart } from 'lucide-react'; import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from '@/components/ui/carousel'; import { Badge } from '@/components/ui/badge'; import { useIsMobile } from '@/hooks/use-mobile';

// Sample vendor data... const vendors = [ /* ... your vendors array ... */ ];

const getCategoryIcon = (category) => { switch (category) { case 'Electronics': return <Smartphone size={14} className="mr-1" />; case 'Fashion': return <Shirt size={14} className="mr-1" />; case 'Home': return <Home size={14} className="mr-1" />; case 'Beauty': return <Droplet size={14} className="mr-1" />; case 'Sports': return <Activity size={14} className="mr-1" />; default: return <ShoppingCart size={14} className="mr-1" />; } };

const categoryColors = { Electronics: 'blue', Fashion: 'pink', Home: 'yellow', Beauty: 'purple', Sports: 'orange', Sustainable: 'green', };

const HorizontalVendorCard = ({ vendor }) => { const [isFollowing, setIsFollowing] = useState(false); const displayProducts = vendor.topProducts.slice(0, 4);

return ( <div className="flex-shrink-0 w-64 bg-white rounded-2xl shadow-sm border border-gray-100 overflow-hidden hover:shadow-md transition-all duration-300 group"> <div className="flex items-start p-2"> <div className="relative w-16 h-16"> <div className="w-16 h-16 flex items-center justify-center"> <img src={vendor.image} alt={vendor.name} className="w-12 h-12 object-contain rounded-md" /> </div> {vendor.discount && ( <div className="absolute top-0 left-0 bg-red-600 text-white text-xs font-bold px-2 py-0.5 rounded-br-lg"> {vendor.discount} </div> )} <div className="absolute -bottom-2 left-0 bg-white rounded-full p-1 shadow-md flex items-center"> <div className="relative flex -space-x-1"> <div className="w-2 h-2 rounded-full bg-blue-500" /> <div className="w-2 h-2 rounded-full bg-green-500" /> <div className="w-2 h-2 rounded-full bg-purple-500" /> </div> <span className="text-xs ml-1 font-medium">{vendor.followers}</span> </div> </div> <div className="flex-1 pl-3 flex flex-col justify-between"> <div> <div className="flex items-center justify-between"> <div className="flex items-center"> <h3 className="font-medium text-xs truncate mr-1">{vendor.name}</h3> {vendor.verified && <CheckCircle size={14} className="text-blue-500 fill-blue-50" />} </div> <div className="text-xs font-bold bg-gray-100 text-gray-700 rounded-full h-5 w-5 flex items-center justify-center"> #{vendor.id} </div> </div> <div className="flex items-center mt-1"> <div className="flex items-center text-yellow-500"> <Star size={12} className="fill-yellow-500" /> <span className="text-xs font-medium ml-0.5">{vendor.rating}</span> </div> <span className="mx-1 text-gray-300">â€¢</span> <div className="text-xs text-gray-500">{vendor.sales} sales</div> </div> </div> <div className="flex mt-1"> <Badge color={categoryColors[vendor.category] || 'gray'} className="flex items-center text-xs w-full justify-center"> {getCategoryIcon(vendor.category)}{vendor.category} </Badge> </div> </div> </div> <div className="px-2 pt-1 pb-2"> <div className="grid grid-cols-4 gap-1"> {displayProducts.map(product => ( <div key={product.id} className="relative group/product"> <div className="aspect-square rounded-md border border-gray-100 bg-gray-50 p-1 flex items-center justify-center"> <img src={product.image} alt="" className="w-full h-full object-contain" /> </div> <div className="absolute inset-0 bg-black bg-opacity-0 group-hover/product:bg-opacity-30 flex items-center justify-center opacity-0 group-hover/product:opacity-100 transition-all rounded-md"> <button className="bg-white rounded-full p-1 shadow-md hover:bg-blue-500 hover:text-white transition-colors"> <ShoppingCart size={8} /> </button> </div> {product.discount && ( <div className="absolute -top-1 -right-1 bg-red-600 text-white text-xs px-1 rounded-full"> {product.discount} </div> )} <div className="absolute -bottom-1 right-0 bg-white text-gray-800 text-xs px-1 rounded shadow-sm border border-gray-100"> {product.price} </div> </div> ))} </div> </div> <div className="px-2 pb-2 pt-1 grid grid-cols-2 gap-2"> <button className="bg-gradient-to-r from-red-500 to-pink-500 hover:from-red-600 hover:to-pink-600 text-white text-xs font-medium py-1.5 px-2 rounded-full transition-colors"> Visit Store </button> <button className={flex items-center justify-center text-xs font-medium py-1.5 px-2 rounded-full transition-colors ${ isFollowing ? 'bg-gray-100 text-gray-800 hover:bg-gray-200' : 'bg-blue-100 text-blue-800 hover:bg-blue-200' }} onClick={() => setIsFollowing(!isFollowing)} > <Heart size={12} className={mr-1 ${isFollowing ? 'fill-gray-800' : ''}} /> {isFollowing ? 'Following' : 'Follow'} </button> </div> </div> ); };

const VendorCarousel = () => { const isMobile = useIsMobile();

return ( <div className="w-full"> <div className="flex justify-between items-center mb-4"> <div className="flex items-center"> <Flame size={18} className="text-orange-500 mr-2" /> <h2 className="text-lg font-medium text-gray-800">Top Vendors</h2> </div> <button className="flex items-center text-xs text-blue-600 font-medium hover:text-blue-800 transition-colors"> More <ChevronRight size={14} className="ml-1" /> </button> </div> <Carousel className="w-full" opts={{ align: 'start', loop: false, dragFree: true }} > <CarouselContent className="-ml-2 md:-ml-4"> {vendors.map(vendor => ( <CarouselItem key={vendor.id} className={embla__slide vendor-carousel-item pl-2 ${!isMobile ? 'md:pl-4 md:basis-1/3 lg:basis-1/4' : ''}} > <HorizontalVendorCard vendor={vendor} /> </CarouselItem> ))} </CarouselContent> <CarouselPrevious className="hidden sm:flex" /> <CarouselNext className="hidden sm:flex" /> </Carousel> </div> ); };

export default VendorCarousel;

